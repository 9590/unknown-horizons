
# DON'T EDIT THIS FILE.

# It was automatically generated with development/create_scenario_pot.sh using
# translation files from pootle.

author: !!python/unicode 'La squadra di UH'
description: !!python/unicode 'Tutorial:

  Costruisci un insediamento ed impara a giocare!

  '
difficulty: !!python/unicode 'Tutorial'
events:
- actions:
  - arguments: [!!python/unicode 'Build a branch office at the coast, so it is easy
        accessible for other ships like the Free Trader.']
    type: message
  - arguments: [!!python/unicode 'Benvenuti a Unknown Horizons!', "Questo \xE8 il\
        \ tuo diario del Capitano dove sono conservate tutte le informazioni importanti.\
        \ Una breve notifica di ogni attivit\xE0 sar\xE0 mostrata a sinistra dello\
        \ schermo.\n\nSe sei interessato a descrizioni pi\xF9 lunghe, il diario fornir\xE0\
        \ tutto l'aiuto di cui hai bisogno.\n\nQuando il diario \xE8 chiuso pu\xF2\
        \ essere riaperto con l'icona 'Diario del Capitano' nell'angolo in alto a\
        \ destra (sotto la mini-mappa, con il documento sigillato e la penna).\n\n\
        Per qualsiasi suggerimento su una migliore formulazione, su argomenti che\
        \ vorresti fossero meglio spiegati o anche per segnalare problemi: per favore\
        \ diccelo e cercheremo di migliorare il tutorial!\n\nVisita www.unknown-horizons.org\
        \ per un aiuto su come contattare il team!\n\nE ora, iniziamo il gioco vero\
        \ e proprio."]
    type: logbook_w
  - arguments: [!!python/unicode 'OBIETTIVO: INSEDIARSI SU UN''ISOLA', "Per spostare\
        \ la nave, selezionarla con un clic sinistro e fare un clic destro sulla posizione\
        \ cui si desidera andare.\n\nUna volta vicino alla costa, il pulsante con\
        \ l'ancora visibile nella scheda panoramica si attiver\xE0.\n\nCi\xF2 significa\
        \ che \xE8 ora in grado di costruirvi qui una filiale premendo il pulsante\
        \ (chiamato 'Costruisci Insediamento').\n\nUn'anteprima dell'edificio verr\xE0\
        \ visualizzata quando si sposta il cursore.\n\n\xC8 possibile costruire in\
        \ ogni luogo dove l'anteprima non diventa rossa.\nFare clic dove si desidera\
        \ posizionare il primo edificio.\n\nOBIETTIVO: Costruire una filiale presso\
        \ la costa.", 2]
    type: logbook
  - arguments: [tutStepDone, 16]
    type: set_var
  conditions:
  - arguments: [0]
    type: time_passed
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: IL TAGLIABOSCHI', "Il materiale di costruzione\
        \ sulla vostra nave ha scaricato automaticamente. Ora \xE8 possibile costruire\
        \ alcuni edifici di base.\n\nInizieremo con la costruzione di un boscaiolo.\n\
        \nCi\xF2 \xE8 essenziale perch\xE9, in questa fase, le tavole sono i poli\
        \ e solo i naviganti possono permettersi di appendere le tende oltre.\n\n\
        Il pescatore ha bisogno di tavole per costruire la nave.\n\nPer costruire\
        \ un boscaiolo, aprire il menu costruire facendo clic sull'icona del grande\
        \ sotto la mini mappa o premendo il tasto B.\n\nIl menu di costruire \xE8\
        \ ordinato per incrementi.\nStai nel primo livello (il livello Marinai) in\
        \ modo tale sono offerti solo gli edifici di base."]
    type: logbook_w
  - arguments: ['', "Quando la civilizzazione avanza, guadagnerai altri edifici pi\xF9\
        \ complessi.\n\nPer adesso, seleziona il tagliaboschi sotto 'Compagnie' e\
        \ costruiscilo in una zona con presenza di alberi.\n\nPotrai anche piantare\
        \ alberi successivamente - ma questo costa denaro. Usa quello che la natura\
        \ ti fornisce!\n\nUna compagnia necessita sempre di un sentiero verso un magazzino\
        \ od una filiale, altrimenti i beni rimarranno alla compagnia e non verranno\
        \ immagazzinati.\n\nQuesto comporta che dovrai costruire un sentiero tra la\
        \ filiale (o magazzino) ed il tagliaboschi.\n\nOBIETTIVO: Costruisci un tagliaboschi\
        \ in una zona alberata e connettilo ad una strada.\n\nGuarda come un trasportatore\
        \ prender\xE0 le tue prime assi autoprodotte."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci un tagliaboschi e collegalo alla filiale
        con un sentiero.']
    type: message
  - arguments: [tutStepDone, 19]
    type: set_var
  conditions:
  - arguments: [4, 9]
    type: settlement_res_stored_greater
  - arguments: [5, 9]
    type: settlement_res_stored_greater
  - arguments: [6, 9]
    type: settlement_res_stored_greater
  - arguments: [tutStepDone, 15]
    type: var_gt
  - arguments: [tutStepDone, 19]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: RIFORNIMENTI DI CIBO', "Avrai bisogno\
        \ anche di compagnie per la produzione di cibo perch\xE9 le persone in generale\
        \ (e specialmente i marinai) sono molto affamati.\n\nLe compagnie disponibili\
        \ nel primo livello sono il Cacciatore ed il Pescatore.\n\nIl Cacciatore,\
        \ sorprendentemente, caccia animali nella foresta, quindi ha bisogno di alberi\
        \ intorno.\n\nNota che puoi mettere il Cacciatore vicino alla foresta del\
        \ tagliaboschi.\n\nPotr\xE0 accadere che gli animali non si riproducano abbastanza\
        \ velocemente o semplicemente si nascondano bene.\n\nConclusione: il cacciatore\
        \ non \xE8 molto affidabile se desideri un rifornimento continuo."]
    type: logbook_w
  - arguments: ['', "Il Pescatore necessita di un sito di costruzione vicino alla\
        \ riva, come la filiale, ed un branco di pesci nelle vicinanze.\n\nCostruir\xE0\
        \ un piccola imbarcazione a remi e pescher\xE0 dei pesci.\n\nQuesto \xE8 un\
        \ rifornimento costante al prezzo di un tempo di produzione di unit\xE0 di\
        \ cibo leggermente maggiore.\n\nUn piccolo insediamento come il tuo potr\xE0\
        \ usare entrambe le compagnie, e potrai bilanciare i pro ed i contro se vedrai\
        \ un confronto diretto.\n\nOBIETTIVO: Costruisci un cacciatore ed un pescatore.\n\
        \nNon dimenticarti di connetterli alla filiale con i sentieri!"]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci un cacciatore ed un pescatore. Connettili
        alla filiale.']
    type: message
  - arguments: [tutStepDone, 22]
    type: set_var
  conditions:
  - arguments: [8, 0]
    type: buildings_connected_to_branch_gt
  - arguments: [tutStepDone, 18]
    type: var_gt
  - arguments: [tutStepDone, 22]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: PIAZZA PRINCIPALE', "I tuoi abitanti\
        \ necessitano una piazza principale da cui possano prelevare i propri beni.\n\
        \nQuesto significa che necessitano di un sentiero tra la loro casa e la piazza\
        \ principale.\n\nTutti i beni nella tua filiale sono disponibili in questa\
        \ 'piazza del mercato', quindi gli abitanti non dovranno andare dal pescatore\
        \ o alla filiale.\n\nDovrai considerare costruire le abitazioni in una zona\
        \ che potrai espandere facilmente e costruire anche dei sentieri.\n\nDovrai\
        \ evitare di piazzare le tende troppo vicine al taglialegna, per esempio,\
        \ perch\xE9 la costruzione di tende rimuover\xE0 gli alberi di cui il taglialegna\
        \ necessita per costruire le assi.\n\nOBIETTIVO: Costruisci una piazza principale."]
    type: logbook_w
  - arguments: ['', "Ora diamo un'occhiata alla piazza principale.\n\nNella scheda\
        \ panoramica potrai facilmente modificare la tassazione.\n\nNella seconda\
        \ scheda 'Conto' vedrai una tabella bilancio dell'isola, mostrando tutti i\
        \ costi che paghi e le tasse che guadagni.\n\nGli articoli 'Vendita' e 'Acquisto'\
        \ si riferiscono al bilancio commerciale e saranno spiegati successivamente.\n\
        \nSe il tuo bilancio \xE8 positivo otterrai dei profitti.\n\nNella scheda\
        \ 'Panoramica Insediamento' potrai vedere quanto felici sono i tuoi abitanti\
        \ e di quali risorse hanno pi\xF9 bisogno."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci una piazza principale. Scegli un''area
        senza troppi edifici commerciali.']
    type: message
  - arguments: [tutStepDone, 25]
    type: set_var
  conditions:
  - arguments: [9, 0]
    type: building_num_of_type_greater
  - arguments: [11, 0]
    type: building_num_of_type_greater
  - arguments: [9, 0]
    type: buildings_connected_to_branch_gt
  - arguments: [11, 0]
    type: buildings_connected_to_branch_gt
  - arguments: [tutStepDone, 21]
    type: var_gt
  - arguments: [tutStepDone, 25]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: EDIFICI RESIDENZIALI', "I coloni vogliono\
        \ dei tetti sulle loro teste, altrimenti non penseranno neppure di venire\
        \ nella tua citt\xE0! Devi fornirgli delle tende.\n\nLe tende sono edifici\
        \ residenziali di base. I tuoi abitanti vorranno aggiornarle quando raggiungono\
        \ livelli pi\xF9 elevati.\n\nI coloni potrebbero non sembrare molto utili\
        \ dati che tenteranno di consumare tutti i beni che producono - ma almeno\
        \ pagheranno le tasse, e questo \xE8 l'unico modo con cui potrai fare soldi\
        \ per ora!\n\nOBIETTIVO: Costruisci una tenda e connettila alla piazza principale."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci una tenda e collegala alla piazza principale.']
    type: message
  - arguments: [tutStepDone, 28]
    type: set_var
  conditions:
  - arguments: [4, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 24]
    type: var_gt
  - arguments: [tutStepDone, 28]
    type: var_lt
- actions:
  - arguments: ['', "Diamo un'occhiata alla scheda panoramica tenda.\nPuoi vedere\n\
        * la felicit\xE0 dei residenti,\n* le tasse che pagano e\n* le risorse che\
        \ richiedono.\n\nSe le loro richieste sono soddisfatte, la felicit\xE0 e quindi\
        \ le entrate delle tasse aumenteranno.\n\nAltrimenti la felicit\xE0 e le tasse\
        \ diminuiranno. Ad un certo punto i residenti potranno inacidirsi e semplicemente\
        \ lasceranno il villaggio, lasciando una rovina decadente.\n\nNota che puoi\
        \ cambiare le impostazione di tassazione anche da qui.\n\nOBIETTIVO: Costruisci\
        \ almeno tre tende aggiuntive.\n\nSUGGERIMENTO: Premendo il tasto SHIFT faciliterai\
        \ la costruzione di molti edifici dello stesso tipo."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci almeno tre tende aggiuntive e collegale
        alla piazza principale.']
    type: message
  - arguments: [tutStepDone, 31]
    type: set_var
  conditions:
  - arguments: [3, 4, 0]
    type: buildings_connected_to_building_gt
  - arguments: [tutStepDone, 27]
    type: var_gt
  - arguments: [tutStepDone, 31]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: IL SEGNALE DI FUOCO', !!python/unicode 'Can
        you see the ship passing your island from time to time? That ship belongs
        to the Free Trader, one of the first settlers in this archipelago.


        The trader will supply your settlement with necessary goods which you can''t
        produce yet.

        You can also sell surpluses of your production, but in general consuming them
        (by building more tents) instead of selling them yields more profit.


        Normally the trader ships just sail around and look for deals, but you can
        speed things up a bit.


        For this purpose, build a signal fire at the coast near your branch office.
        It will show ships the way to your settlement.


        The signal fire has to cover the area which the ships pass through to catch
        them.']
    type: logbook_w
  - arguments: ['', !!python/unicode 'After this little advertisment, the trader will
        also stop by and look into your branch office if it planned to sail past it.


        You can propose deals via the branch office tab ''Buy/Sell''. (This feature
        is currently quite fiddly to use. If you come up with a nice way of improving
        it, please share your thoughts! We need your help here!)


        At the ''sailors'' increment, you are equipped with three trading slots.


        Click on the small icon to change the slot mode from ''Buy'' to ''Sell'' and
        vice versa.


        Click in the slot to choose the good you want to trade with. We will further
        explain this once you are ready to trade.


        TASK: Build a signal fire at the coast close to your branch office.']
    type: logbook
  - arguments: [!!python/unicode 'Costruisci un segnale di fuoco sulla costa vicino
        alla tua filiale.']
    type: message
  - arguments: [tutStepDone, 34]
    type: set_var
  conditions:
  - arguments: [3, 4, 3]
    type: buildings_connected_to_building_gt
  - arguments: [tutStepDone, 30]
    type: var_gt
  - arguments: [tutStepDone, 34]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: IL COMMERCIO', "Eccellente! Il Libero\
        \ Commerciante ora si fermer\xE0 alla tua filiale di tanto in tanto.\n\nContinuiamo\
        \ il tutorial su come commerciare.\n\nDopo aver selezionato un tipo specifico\
        \ di bene, la barra verde nel basso dello spazio (se visibile) mostrer\xE0\
        \ la quantit\xE0 di questo bene nei tuoi magazzini.\n\nSpostando il selettore\
        \ a destra di ogni spazio determina la 'quantit\xE0 obiettivo' che ha un diverso\
        \ significato nei casi 'Compra' e 'Vendi'.\nQuando compri ne comprerai a sufficienza\
        \ per tenere la 'quantit\xE0 obiettivo' in magazzino.\nQuando vendi la 'quantit\xE0\
        \ obiettivo' \xE8 il numero che mantieni in riserva da non vendere."]
    type: logbook_w
  - arguments: ['', "Ad esempio:\nChe presenta una fessura 'Buy' e 5 tonnellate in\
        \ magazzino, uno slider posizionato a 9 tonnellate ti far\xE0 acquistare ulteriori\
        \ 4 tonnellate al massimo.\nLa vendita funziona in modo simile. Uno slot 'Vendi'\
        \ con 18 tonnellate in magazzino e lo slider posizionato a 13 vender\xE0 fino\
        \ a 5 tonnellate.\n\nSe l'operatore libero ma vuole solo acquistare o vendere\
        \ a meno di impostazioni lo permettono, si deve vivere con quello e aspettare\
        \ il suo ritorno.\n\nUnknown Horizons ha caratteristiche determinazione intelligente\
        \ del prezzo, in modo che il valore di una unit\xE0 pu\xF2 variare.\nNON \xE8\
        \ possibile cambiare manualmente i prezzi!\n\nPotete vedere il saldo commerciale\
        \ nella scheda 'Account' a confronto la 'Vendi' e 'Compra' valori l\xEC.\n\
        \nTASK: Buy  come strumenti di cui hai bisogno di avere 30 utensili in magazzino!"]
    type: logbook
  - arguments: [!!python/unicode 'Raggiungi una scorta per l''isola di almeno 30 attrezzi.']
    type: message
  - arguments: [tutStepDone, 37]
    type: set_var
  conditions:
  - arguments: [6, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 33]
    type: var_gt
  - arguments: [tutStepDone, 37]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: IL PADIGLIONE', "Questi attrezzi sono\
        \ sufficienti per il momento. Ben fatto!\n\nOra fornisci alloggi, una piazza\
        \ principale e cibo per i tuoi abitanti.\n\nPer\xF2 c'\xE8 ancora un bisogno\
        \ che non abbiamo soddisfatto, che puoi verificare nella piazza del mercato\
        \ o nella scheda della tenda - i tuoi marinai vogliono un edificio di base\
        \ dove possano pregare.\n\nLa soluzione \xE8 un padiglione sotto cui il parroco\
        \ del villaggio trover\xE0 rapidamente riparo dal sole.\n\nEdifici di servizio\
        \ come questo devono anch'essi essere connessi alle tende con un sentiero,\
        \ altrimenti i residenti non potranno raggiungerli.\n\nNei livelli successivi\
        \ verranno resi disponibili aggiornamenti agli edifici."]
    type: logbook_w
  - arguments: ['', "In quel caso la versione 'piccola' non sar\xE0 pi\xF9 necessaria\
        \ dato che quella 'grande' fornir\xE0 egualmente quello che i residenti necessitano\
        \ sin dai primi livelli.\n\nAbbi cura quando pianifichi la tua citt\xE0 dato\
        \ che la maggior parte di questi edifici migliorati sono pi\xF9 grandi dei\
        \ modelli base.\n\nNota che la fede \xE8 trattata come una risorsa fisica,\
        \ quindi le unit\xE0 dovranno passare da qui ogni tanto.\n\nImportante:\n\
        NON \xE8 abbastanza che l'edificio sia semplicemente in un certo raggio dalle\
        \ tende.\n\nOBIETTIVO: Costruisci un padiglione con un sentiero verso le tende\
        \ in modo da soddisfare le esigenze spirituali dei marinai."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci un padiglione con connessioni alle tende.']
    type: message
  - arguments: [tutStepDone, 40]
    type: set_var
  conditions:
  - arguments: [6, 29]
    type: settlement_res_stored_greater
  - arguments: [tutStepDone, 36]
    type: var_gt
  - arguments: [tutStepDone, 40]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: LIVELLO SUCCESSIVO', "Tutte le richieste\
        \ sono ora soddisfatte se i tuoi abitanti possono regolarmente visitare la\
        \ piazza principale ed il padiglione e se i rifornimenti di cibo sono adeguati.\n\
        \nSe i marinai sono sufficientemente felici, vorranno avanzare al livello\
        \ successivo chiamato Pionieri.\n\nPer farli contenti non c'\xE8 nulla di\
        \ meglio da fare che abbassare le tasse dato che hai soddisfatto le loro richieste.\n\
        \nDovrai cercare di non stare troppo con bassi livelli di tassazione altrimenti\
        \ prima o poi finirai in bancarotta. Se \xE8 solo per un breve periodo e sai\
        \ ci\xF2 che fai, tuttavia va bene.\n\nDopo qualche tempo la prima unit\xE0\
        \ andr\xE0 alla piazza principale e cercher\xE0 del materiale da costruzione\
        \ per costruire una casa di legno. Questa casa rimpiazzer\xE0 la vecchia tenda."]
    type: logbook_w
  - arguments: ['', "Questi aggiornamenti residenziali sono i soli che costano risorse\
        \ e non possono essere limitati da te.\n\nCi sono aggiornamenti manuali per\
        \ alcuni edifici dove userai risorse per costruire una versione migliore nello\
        \ stesso posto, ed aggiornamenti senza spese, per esempio, come potrai vedere,\
        \ con il tagliaboschi (in questo caso solo l'aspetto cambier\xE0).\n\nLe abitazioni\
        \ aggiornate ospiteranno pi\xF9 abitanti, ed i pionieri pagheranno anche pi\xF9\
        \ tasse dei marinai.\n\nCome avrai gi\xE0 notato, lo svantaggio e che i pionieri\
        \ richiedono beni aggiuntivi che i marinai non richiedono - quindi dovrai\
        \ spendere altri soldi per farli comunque felici.\n\nOBIETTIVO: Imposta il\
        \ livello di tassazione a Basso (a sinistra) ed aspetta l'aggiornamento dei\
        \ marinai."]
    type: logbook
  - arguments: [!!python/unicode 'Imposta il livello delle tasse su Basso (a sinistra)
        ed attendi l''aggiornamento dei marinai.']
    type: message
  - arguments: [tutStepDone, 43]
    type: set_var
  conditions:
  - arguments: [3, 5, 3]
    type: buildings_connected_to_building_gt
  - arguments: [tutStepDone, 39]
    type: var_gt
  - arguments: [tutStepDone, 43]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: LA FATTORIA', "Congratulazioni! Alcuni\
        \ dei tuoi abitanti hanno raggiunto il livello II!\n\nOra hai accesso a nuovi\
        \ edifici, dai una nuova occhiata al men\xF9 di costruzione.\n\nUna nuova\
        \ scheda \xE8 apparsa.\n\nI pionieri richiedono abiti, quindi dovrai realizzare\
        \ una linea di produzione di abiti con lana di agnello (uno dei beni prodotto\
        \ dalla fattoria).\n\nLa fattoria \xE8 un edifico molto speciale dato che\
        \ pu\xF2 produrre non solo uno, ma ma molti (e differenti) beni a tua scelta.\n\
        \nLa produzione della fattoria dipende dal tipo di campi che vi costruisci\
        \ attorno."]
    type: logbook_w
  - arguments: ['', "Gli daremo un'occhiata pi\xF9 tardi.\n\nLe fattorie, come tutte\
        \ le compagnie che producono materiali grezzi, non devono essere necessariamente\
        \ connesse a magazzini o Filiali.\n\nFintanto che unit\xE0 della compagnia\
        \ di produzione finale potranno raggiungere la fattoria, ed i trasportatori\
        \ dalla filiale o dalla tenda magazzino possono raggiungere la compagnia finale\
        \ va tutto bene.\n\nSe, comunque, pensi di fare delle lavorazioni in parti\
        \ differenti dell'isola (che pu\xF2 avere senso) o addirittura su isole diverse,\
        \ ti servir\xE0 una connessione ai collettori.\n\nProva a costruire la fattoria\
        \ non troppo vicino alla costa od ai tuoi edifici gi\xE0 esistenti, dato che\
        \ vi sar\xE0 necessario dello spazio vicino per funzionare bene.\n\nOBIETTIVO:\
        \ Costruisci una fattoria."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci una fattoria mantenendo dello spazio
        disponibile intorno.']
    type: message
  - arguments: [tutStepDone, 46]
    type: set_var
  conditions:
  - arguments: [0]
    type: settler_level_greater
  - arguments: [tutStepDone, 42]
    type: var_gt
  - arguments: [tutStepDone, 46]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: I CAMPI', "La fattoria stessa non produrr\xE0\
        \ nulla senza alcuni campi.\n\nAl momento puoi scegliere tra pascoli, patate\
        \ e campi di zucchero.\n\nDiamo una breve descrizione:\n* Pascoli: le pecore\
        \ vivono qui, producendo lana d'agnello.\n* Campi di patate: vi crescono patate\
        \  che sono al momento considerate cibo.\n* Campi da zucchero: vi cresce zucchero\
        \ che \xE8 usato per distillare liquori e (successivamente) produrre dolciumi.\n\
        \nAl momento ci servono solo i pascoli, ma nel caso la tua catena alimentare\
        \ sia troppo piccola (forse in presenza di molti edifici residenziali) puoi\
        \ anche produrvi patate.\n\nNota che per le patate ti servir\xE0 una connessione\
        \ alla fattoria (non al campo!) dato che sar\xE0 l'unica compagnia che lavora\
        \ sui beni."]
    type: logbook_w
  - arguments: ['', "Assicurati che tutti i campi costruiti siano nell'area coperta\
        \ dalla fattoria.\n\nPuoi avere delle produzioni combinate - un pascolo non\
        \ sfrutter\xE0 tutta la fattoria - ma dovrai controllare quanti campi pu\xF2\
        \ servire una fattoria.\n\nDiverse classi di campi richiedono alle unit\xE0\
        \ della fattoria di impiegare pi\xF9 o meno tempo qui (per seminare, raccogliere,\
        \ radunare, ecc...) e, quindi, la fattoria potrebbe non riuscire a servire\
        \ tutti i campi gestiti in tempo.\n\nPer adesso non preoccuparti troppo di\
        \ questi problemi dato che non hai ancora costruito campi. Procediamo quindi!\n\
        \nOBIETTIVO: Costruisci almeno un pascolo nel raggio della fattoria ed aggiungi\
        \ campi di patate se lo desideri."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci almeno un pascolo ed aggiungi campi di
        patate se lo desideri.']
    type: message
  - arguments: [tutStepDone, 49]
    type: set_var
  conditions:
  - arguments: [20, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 45]
    type: var_gt
  - arguments: [tutStepDone, 49]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: I MAGAZZINI', "Hai controllato il tagliaboschi\
        \ recentemente?\n\nDato che la filiale non dispone di spazio illimitato per\
        \ immagazzinare beni, i trasportatori si fermeranno a raccogliere beni dalle\
        \ compagnie quando la scorta \xE8 piena.\nQuindi se nessun marinaio ha recentemente\
        \ aggiornato la tenda, avrai probabilmente molte assi ed in quel caso il taglialegna\
        \ potrebbe oziare.\nPossiamo migliorare questa situazione con due approcci\
        \ differenti, e sotto discuteremo entrambi.\n\nTutte le compagnie hanno la\
        \ possibilit\xE0 di non fare alcun lavoro.\nQuesto potr\xE0 sembrare strano,\
        \ ma prova a cliccare sulla ruota dentata che vedi, ad esempio, nella panoramica\
        \ del tagliaboschi.\n\nSe questo modo 'pausa' \xE8 abilitato (lo chiamiamo\
        \ 'Decommissione'), i costi ricorrenti che paghi per l'edificio diminuiranno.\
        \ Non saranno zero, ma comunque pi\xF9 bassi del caso con la compagnia attiva."]
    type: logbook_w
  - arguments: ['', "Questo significa che puoi risparmiare denaro quando non hai temporaneamente\
        \ bisogno di una compagnia e comunque non vuoi distruggerla.\n\nUn'altra soluzione\
        \ \xE8 di costruire l'ultimo edificio di livello I che non abbiamo ancora\
        \ discusso: la tenda magazzino.\n\nQuesto edificio ha due scopi:\n* offre\
        \ pi\xF9 spazio per i tuoi beni, e \n* invia i propri trasportatori per raccogliere\
        \ beni, proprio come fa la filiale.\n\nNota che le compagnie possono anche\
        \ essere connesse ad un magazzino in modo da avere i propri prodotti raccolti,\
        \ e se la filiale \xE8 sovraccarica per i lavori di raccolta, puoi costruire\
        \ un magazzino tenda per aiutarla.\n\nOBIETTIVO: Costruisci un magazzino tenda,\
        \ preferibilmente dove necessiti di trasportatori."]
    type: logbook
  - arguments: ["Costruisci una tenda magazzino (scheda livello I) dove pu\xF2 essere\
        \ utile."]
    type: message
  - arguments: [tutStepDone, 52]
    type: set_var
  conditions:
  - arguments: [18, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 48]
    type: var_gt
  - arguments: [tutStepDone, 52]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: IL TESSITORE', "Ora che la produzione\
        \ di lana \xE8 avviata hai ancora bisogno di un tessitore per produrre abiti\
        \ da questa lana.\n\nCi sono due zone dove costruirlo - o vicino alla fattoria\
        \ o vicino ad un Magazzino Tenda (o Filiale).\n\nIn entrambi i casi devi anche\
        \ provvedere ad una connessione con un sentiero.\n\nPuoi costruire il tessitore\
        \ vicino alla fattoria e demolire ogni sentiero verso la fattoria per vedere\
        \ che comunque raccoglier\xE0 la lana e produrr\xE0.\n\nOBIETTIVO: Costruisci\
        \ un tessitore posizionandolo in modo che possa raccogliere lana."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci un tessitore che possa raggiungere la
        lana della fattoria.']
    type: message
  - arguments: [tutStepDone, 55]
    type: set_var
  conditions:
  - arguments: [2, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 51]
    type: var_gt
  - arguments: [tutStepDone, 55]
    type: var_lt
- actions:
  - arguments: ["Alloggia almeno 50 abitanti nella tua citt\xE0 per completare il\
        \ tutorial. Hai bisogno di un bilancio positivo."]
    type: message
  - arguments: [!!python/unicode 'OBIETTIVO: FINISCI IL TUTORIAL', "Prova ad alloggiare\
        \ 50 abitanti o pi\xF9 nella tua citt\xE0 fornendo pi\xF9 edifici residenziali.\n\
        \nUna volta che sarai in grado di mantenere un'economia che pu\xF2 soddisfare\
        \ questo valore di cittadini, sarai pronto per scoprire Unknown Horizons!\n\
        \nOBIETTIVO: Raggiungi un totale di 50 abitanti ed un bilancio positivo per\
        \ completare questo tutorial."]
    type: logbook
  - arguments: [tutStepDone, 58]
    type: set_var
  conditions:
  - arguments: [3, 0]
    type: settlement_res_stored_greater
  - arguments: [7, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 54]
    type: var_gt
  - arguments: [tutStepDone, 58]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'COMPITI FINITI', "Non c'\xE8 pi\xF9 nulla da fare,\
        \ ora.\n\nSe hai suggerimenti su cosa potremmo o dovremmo migliorare, aggiungili\
        \ oppure esci:\n\nwww.unknown-horizons.org\n\n#unknown-horizons @ irc.freenode.net\n\
        \nteam@unknown-horizons.org\n\nI nostri forum sono anche aperti per te!\n\n\
        I migliori risultati fino ad ora sono stati raggiunti unendosi al canale IRC,\
        \ quindi potresti provare questo come primo passo (-;"]
    type: logbook
  - arguments: [!!python/unicode 'Grazie!', !!python/unicode '







        Grazie per aver giocato il tutorial!


        La squadra di UH']
    type: logbook
  - arguments: [tutStepDone, 61]
    type: set_var
  conditions:
  - arguments: [0]
    type: settlements_num_greater
  - arguments: [50]
    type: settlement_inhabitants_greater
  - arguments: [3, 3]
    type: building_num_of_type_greater
  - arguments: [0]
    type: settler_level_greater
  - arguments: [0]
    type: player_balance_greater
  - arguments: [tutStepDone, 57]
    type: var_gt
  - arguments: [tutStepDone, 61]
    type: var_lt
- actions:
  - {type: win}
  - arguments: [!!python/unicode 'Congratulazioni! Hai completato il tutorial e sei
        pronto per nuove sfide!']
    type: message
  conditions:
  - arguments: [tutStepDone, 60]
    type: var_gt
locale: it
mapfile: development.sqlite

