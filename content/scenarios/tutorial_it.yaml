
# DON'T EDIT THIS FILE.

# It was automatically generated with development/create_scenario_pot.sh using
# translation files from pootle.

author: !!python/unicode 'La squadra di UH'
description: !!python/unicode 'Tutorial:

  Costruisci un insediamento ed impara a giocare!

  '
difficulty: !!python/unicode 'Tutorial'
events:
- actions:
  - arguments: [!!python/unicode 'Build a branch office at the coast, so it is easy
        accessible for other ships like the Free Trader.']
    type: message
  - arguments: [!!python/unicode 'Benvenuti a Unknown Horizons!', "Questo \xE8 il\
        \ tuo diario del Capitano dove sono conservate tutte le informazioni importanti.\
        \ Una breve notifica di ogni attivit\xE0 sar\xE0 mostrata a sinistra dello\
        \ schermo.\n\nSe sei interessato a descrizioni pi\xF9 lunghe, il diario fornir\xE0\
        \ tutto l'aiuto di cui hai bisogno.\n\nQuando il diario \xE8 chiuso pu\xF2\
        \ essere riaperto con l'icona 'Diario del Capitano' nell'angolo in alto a\
        \ destra (sotto la mini-mappa, con il documento sigillato e la penna).\n\n\
        Per qualsiasi suggerimento su una migliore formulazione, su argomenti che\
        \ vorresti fossero meglio spiegati o anche per segnalare problemi: per favore\
        \ diccelo e cercheremo di migliorare il tutorial!\n\nVisita www.unknown-horizons.org\
        \ per un aiuto su come contattare il team!\n\nE ora, iniziamo il gioco vero\
        \ e proprio."]
    type: logbook_w
  - arguments: [!!python/unicode 'OBIETTIVO: INSEDIARSI SU UN''ISOLA', !!python/unicode 'To
        move your ship, select it with a left click and right click on the location
        you want it to go to.


        Once you are near the coast, the anchor-like button you see in the overview
        tab will become active.


        This indicates that you are able to build a branch office there by pressing
        that button (called ''Build Settlement'').


        Now a preview of your building is dragged around when you move the cursor.


        You can build on any spot where this preview is not shaded red.

        Click where you want to place your first building.


        TASK: Build a branch office at the coast.', 2]
    type: logbook
  - arguments: [tutStepDone, 16]
    type: set_var
  conditions:
  - arguments: [0]
    type: time_passed
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: IL TAGLIABOSCHI', "Il materiale di costruzione\
        \ sulla vostra nave ha scaricato automaticamente. Ora \xE8 possibile costruire\
        \ alcuni edifici di base.\n\nInizieremo con la costruzione di un boscaiolo.\n\
        \nCi\xF2 \xE8 essenziale perch\xE9, in questa fase, le tavole sono i poli\
        \ e solo i naviganti possono permettersi di appendere le tende oltre.\n\n\
        Il pescatore ha bisogno di tavole per costruire la nave.\n\nPer costruire\
        \ un boscaiolo, aprire il menu costruire facendo clic sull'icona del grande\
        \ sotto la mini mappa o premendo il tasto B.\n\nIl menu di costruire \xE8\
        \ ordinato per incrementi.\nStai nel primo livello (il livello Marinai) in\
        \ modo tale sono offerti solo gli edifici di base."]
    type: logbook_w
  - arguments: ['', !!python/unicode 'As your civilization advances, you also gain
        more and more complex buildings.


        For now, select the lumberjack under ''Companies'' and build it in an area
        with some trees around.


        You can also plant trees later - but that costs money. Use what nature provided
        you with!


        A company always needs a trail connection to a storage or branch office, otherwise
        goods will remain at the company and not be collected.


        This means that you have to build a trail connecting your branch office (or
        storage) and lumberjack.


        TASK: Build a lumberjack in a wooded area and connect it to a road.


        Watch how a collector will fetch your first self-produced boards.']
    type: logbook
  - arguments: [!!python/unicode 'Build a lumberjack and connect it to the branch
        office using a trail.']
    type: message
  - arguments: [tutStepDone, 19]
    type: set_var
  conditions:
  - arguments: [4, 9]
    type: settlement_res_stored_greater
  - arguments: [5, 9]
    type: settlement_res_stored_greater
  - arguments: [6, 9]
    type: settlement_res_stored_greater
  - arguments: [tutStepDone, 15]
    type: var_gt
  - arguments: [tutStepDone, 19]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: RIFORNIMENTI DI CIBO', "Avrai bisogno\
        \ anche di compagnie per la produzione di cibo perch\xE9 le persone in generale\
        \ (e specialmente i marinai) sono molto affamati.\n\nLe compagnie disponibili\
        \ nel primo livello sono il Cacciatore ed il Pescatore.\n\nIl Cacciatore,\
        \ sorprendentemente, caccia animali nella foresta, quindi ha bisogno di alberi\
        \ intorno.\n\nNota che puoi mettere il Cacciatore vicino alla foresta del\
        \ tagliaboschi.\n\nPotr\xE0 accadere che gli animali non si riproducano abbastanza\
        \ velocemente o semplicemente si nascondano bene.\n\nConclusione: il cacciatore\
        \ non \xE8 molto affidabile se desideri un rifornimento continuo."]
    type: logbook_w
  - arguments: ['', !!python/unicode 'The Fisher needs a coastal building site like
        the branch office and a fish school in range.


        He will build a small rowing vessel and catch some fish.


        This is a very constant supply at the cost of a slightly longer production
        time per unit of food.


        A small settlement like yours can use both companies, and you can better balance
        pros and cons if you see the direct comparison.


        TASK: Build a hunter and a fisher.


        Don''t forget to connect them to your branch office with trails!']
    type: logbook
  - arguments: [!!python/unicode 'Build a hunter and a fisher. Connect them to the
        branch office.']
    type: message
  - arguments: [tutStepDone, 22]
    type: set_var
  conditions:
  - arguments: [8, 0]
    type: buildings_connected_to_branch_gt
  - arguments: [tutStepDone, 18]
    type: var_gt
  - arguments: [tutStepDone, 22]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: PIAZZA PRINCIPALE', !!python/unicode 'Your
        residents need a main square where they can fetch their goods from.


        This means that they need a trail connection from their home to the main square.


        All goods in your branch office are available at this ''market place'', so
        your residents do not need to walk to the fisher or even to the branch office.


        You should consider founding your actual house settlement in an area where
        you can easily expand it and build some trails, too.


        You should avoid placing tents too close to your lumberjacks for example because
        building tents will clear away the trees that your lumberjack needs to produce
        boards.


        TASK: Build a main square.']
    type: logbook_w
  - arguments: ['', "Diamo ora uno sguardo pi\xF9 da vicino la piazza principale.\n\
        \nNella scheda 'Account' si ottiene un bilancio di questa isola, con tutte\
        \ le spese pagate e tutte le tasse che guadagni.\n\ngli elementi 'vendit\xE0\
        ' e 'Compra' consulta il saldo commerciale e sar\xE0 spiegato pi\xF9 avanti.\n\
        \nSe il saldo \xE8 positivo, \xE8 tutti-in-tutti di realizzare un profitto.\n\
        \nIn diverse schede  panoramica d'incremento \xE8 possibile visualizzare le\
        \ statistiche sulla tua abitanti. \xC8 inoltre possibile impostare l'incremento\
        \ di una specificha tassa globale e consentire o negare abitanti di questo\
        \ incremento di passare a quella immediatamente superiore."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci una piazza principale. Scegli un''area
        senza troppi edifici commerciali.']
    type: message
  - arguments: [tutStepDone, 25]
    type: set_var
  conditions:
  - arguments: [9, 0]
    type: building_num_of_type_greater
  - arguments: [11, 0]
    type: building_num_of_type_greater
  - arguments: [9, 0]
    type: buildings_connected_to_branch_gt
  - arguments: [11, 0]
    type: buildings_connected_to_branch_gt
  - arguments: [tutStepDone, 21]
    type: var_gt
  - arguments: [tutStepDone, 25]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: EDIFICI RESIDENZIALI', "I coloni vogliono\
        \ dei tetti sulle loro teste, altrimenti non penseranno neppure di venire\
        \ nella tua citt\xE0! Devi fornirgli delle tende.\n\nLe tende sono edifici\
        \ residenziali di base. I tuoi abitanti vorranno aggiornarle quando raggiungono\
        \ livelli pi\xF9 elevati.\n\nI coloni potrebbero non sembrare molto utili\
        \ dati che tenteranno di consumare tutti i beni che producono - ma almeno\
        \ pagheranno le tasse, e questo \xE8 l'unico modo con cui potrai fare soldi\
        \ per ora!\n\nOBIETTIVO: Costruisci una tenda e connettila alla piazza principale."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci una tenda e collegala alla piazza principale.']
    type: message
  - arguments: [tutStepDone, 28]
    type: set_var
  conditions:
  - arguments: [4, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 24]
    type: var_gt
  - arguments: [tutStepDone, 28]
    type: var_lt
- actions:
  - arguments: ['', "Diamo un'occhiata alla scheda panoramica tenda.\nPuoi vedere\n\
        * la felicit\xE0 dei residenti,\n* le tasse che pagano e\n* le risorse che\
        \ richiedono.\n\nSe le loro richieste sono soddisfatte, la felicit\xE0 e quindi\
        \ le entrate delle tasse aumenteranno.\n\nAltrimenti la felicit\xE0 e le tasse\
        \ diminuiranno. Ad un certo punto i residenti potranno inacidirsi e semplicemente\
        \ lasceranno il villaggio, lasciando una rovina decadente.\n\nNota che puoi\
        \ cambiare le impostazione di tassazione anche da qui.\n\nOBIETTIVO: Costruisci\
        \ almeno tre tende aggiuntive.\n\nSUGGERIMENTO: Premendo il tasto SHIFT faciliterai\
        \ la costruzione di molti edifici dello stesso tipo."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci almeno tre tende aggiuntive e collegale
        alla piazza principale.']
    type: message
  - arguments: [tutStepDone, 31]
    type: set_var
  conditions:
  - arguments: [3, 4, 0]
    type: buildings_connected_to_building_gt
  - arguments: [tutStepDone, 27]
    type: var_gt
  - arguments: [tutStepDone, 31]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: IL SEGNALE DI FUOCO', !!python/unicode 'Can
        you see the ship passing your island from time to time? That ship belongs
        to the Free Trader, one of the first settlers in this archipelago.


        The trader will supply your settlement with necessary goods which you can''t
        produce yet.

        You can also sell surpluses of your production, but in general consuming them
        (by building more tents) instead of selling them yields more profit.


        Normally the trader ships just sail around and look for deals, but you can
        speed things up a bit.


        For this purpose, build a signal fire at the coast near your branch office.
        It will show ships the way to your settlement.


        The signal fire has to cover the area which the ships pass through to catch
        them.']
    type: logbook_w
  - arguments: ['', !!python/unicode 'After this little advertisment, the trader will
        also stop by and look into your branch office if it planned to sail past it.


        You can propose deals via the branch office tab ''Buy/Sell''. (This feature
        is currently quite fiddly to use. If you come up with a nice way of improving
        it, please share your thoughts! We need your help here!)


        At the ''sailors'' increment, you are equipped with three trading slots.


        Click on the small icon to change the slot mode from ''Buy'' to ''Sell'' and
        vice versa.


        Click in the slot to choose the good you want to trade with. We will further
        explain this once you are ready to trade.


        TASK: Build a signal fire at the coast close to your branch office.']
    type: logbook
  - arguments: [!!python/unicode 'Build a signal fire at the coast close to your branch
        office.']
    type: message
  - arguments: [tutStepDone, 34]
    type: set_var
  conditions:
  - arguments: [3, 4, 3]
    type: buildings_connected_to_building_gt
  - arguments: [tutStepDone, 30]
    type: var_gt
  - arguments: [tutStepDone, 34]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: IL COMMERCIO', !!python/unicode "Excellent!\
        \ The Free Trader will now stop by at your branch office from time to time.\n\
        \nLet's continue our tutorial on how to trade.\n\nAfter selecting a particular\
        \ type of good, the green bar across the bottom of the slot (if visible) shows\
        \ you how much you have in stock of this good.\n\nDragging the slider on the\
        \ right of each slot determines your 'target value' which has a different\
        \ meaning on 'Buy' and 'Sell'. \nWhen buying, you will buy sufficient to hold\
        \ your 'target value' in stock. \nWhen selling the 'target value' is the number\
        \ which you hold in reserve to not sell"]
    type: logbook_w
  - arguments: ['', "Ad esempio:\nChe presenta una fessura 'Buy' e 5 tonnellate in\
        \ magazzino, uno slider posizionato a 9 tonnellate ti far\xE0 acquistare ulteriori\
        \ 4 tonnellate al massimo.\nLa vendita funziona in modo simile. Uno slot 'Vendi'\
        \ con 18 tonnellate in magazzino e lo slider posizionato a 13 vender\xE0 fino\
        \ a 5 tonnellate.\n\nSe l'operatore libero ma vuole solo acquistare o vendere\
        \ a meno di impostazioni lo permettono, si deve vivere con quello e aspettare\
        \ il suo ritorno.\n\nUnknown Horizons ha caratteristiche determinazione intelligente\
        \ del prezzo, in modo che il valore di una unit\xE0 pu\xF2 variare.\nNON \xE8\
        \ possibile cambiare manualmente i prezzi!\n\nPotete vedere il saldo commerciale\
        \ nella scheda 'Account' a confronto la 'Vendi' e 'Compra' valori l\xEC.\n\
        \nTASK: Buy come strumenti di cui hai bisogno di avere 30 utensili in magazzino!"]
    type: logbook
  - arguments: [!!python/unicode 'Raggiungi una scorta per l''isola di almeno 30 attrezzi.',
      !!python/unicode 'Note that this might take a while.']
    type: message
  - arguments: [tutStepDone, 37]
    type: set_var
  conditions:
  - arguments: [6, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 33]
    type: var_gt
  - arguments: [tutStepDone, 37]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: IL PADIGLIONE', "Questi attrezzi sono\
        \ sufficienti per il momento. Ben fatto!\n\nOra fornisci alloggi, una piazza\
        \ principale e cibo per i tuoi abitanti.\n\nPer\xF2 c'\xE8 ancora un bisogno\
        \ che non abbiamo soddisfatto, che puoi verificare nella piazza del mercato\
        \ o nella scheda della tenda - i tuoi marinai vogliono un edificio di base\
        \ dove possano pregare.\n\nLa soluzione \xE8 un padiglione sotto cui il parroco\
        \ del villaggio trover\xE0 rapidamente riparo dal sole.\n\nEdifici di servizio\
        \ come questo devono anch'essi essere connessi alle tende con un sentiero,\
        \ altrimenti i residenti non potranno raggiungerli.\n\nNei livelli successivi\
        \ verranno resi disponibili aggiornamenti agli edifici."]
    type: logbook_w
  - arguments: ['', "Si noti che la fede \xE8 trattato come una risorsa fisica! \n\
        \nQuesto significa che i tuoi abitanti hanno bisogno di un collegamento stradale\
        \ al produttore (padiglione) per prendere la fede l\xE0. \nDopo qualche tempo,\
        \ essi hanno consumato e poi ancora cercare un produttore per raccogliere\
        \ pi\xF9 fede. \n\nImportante: \nNon \xE8 sufficiente che l'edificio \xE8\
        \ solo all'interno di una determinata gamma di tende. \nIl collegamento stradale\
        \ \xE8 inoltre richiesta. \n\nTASK: costruire un padiglione con un sentiero\
        \ per le tende in modo da soddisfare la domanda tuoi marinai 'per fede."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci un padiglione con connessioni alle tende.']
    type: message
  - arguments: [tutStepDone, 40]
    type: set_var
  conditions:
  - arguments: [6, 29]
    type: settlement_res_stored_greater
  - arguments: [tutStepDone, 36]
    type: var_gt
  - arguments: [tutStepDone, 40]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: LIVELLO SUCCESSIVO', "Tutte le richieste\
        \ sono ora soddisfatte se i tuoi abitanti possono regolarmente visitare la\
        \ piazza principale ed il padiglione e se i rifornimenti di cibo sono adeguati.\n\
        \nSe i marinai sono sufficientemente felici, vorranno avanzare al livello\
        \ successivo chiamato Pionieri.\n\nPer farli contenti non c'\xE8 nulla di\
        \ meglio da fare che abbassare le tasse dato che hai soddisfatto le loro richieste.\n\
        \nDovrai cercare di non stare troppo con bassi livelli di tassazione altrimenti\
        \ prima o poi finirai in bancarotta. Se \xE8 solo per un breve periodo e sai\
        \ ci\xF2 che fai, tuttavia va bene.\n\nDopo qualche tempo la prima unit\xE0\
        \ andr\xE0 alla piazza principale e cercher\xE0 del materiale da costruzione\
        \ per costruire una casa di legno. Questa casa rimpiazzer\xE0 la vecchia tenda."]
    type: logbook_w
  - arguments: ['', "Questi aggiornamenti residenziali sono i soli che costano risorse\
        \ e non possono essere limitati da te.\n\nCi sono aggiornamenti manuali per\
        \ alcuni edifici dove userai risorse per costruire una versione migliore nello\
        \ stesso posto, ed aggiornamenti senza spese, per esempio, come potrai vedere,\
        \ con il tagliaboschi (in questo caso solo l'aspetto cambier\xE0).\n\nLe abitazioni\
        \ aggiornate ospiteranno pi\xF9 abitanti, ed i pionieri pagheranno anche pi\xF9\
        \ tasse dei marinai.\n\nCome avrai gi\xE0 notato, lo svantaggio e che i pionieri\
        \ richiedono beni aggiuntivi che i marinai non richiedono - quindi dovrai\
        \ spendere altri soldi per farli comunque felici.\n\nOBIETTIVO: Imposta il\
        \ livello di tassazione a Basso (a sinistra) ed aspetta l'aggiornamento dei\
        \ marinai."]
    type: logbook
  - arguments: [!!python/unicode 'Imposta il livello delle tasse su Basso (a sinistra)
        ed attendi l''aggiornamento dei marinai.']
    type: message
  - arguments: [tutStepDone, 43]
    type: set_var
  conditions:
  - arguments: [3, 5, 3]
    type: buildings_connected_to_building_gt
  - arguments: [tutStepDone, 39]
    type: var_gt
  - arguments: [tutStepDone, 43]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: LA FATTORIA', "Congratulazioni! Alcuni\
        \ dei tuoi abitanti hanno raggiunto il livello II!\n\nOra hai accesso a nuovi\
        \ edifici, dai una nuova occhiata al men\xF9 di costruzione.\n\nUna nuova\
        \ scheda \xE8 apparsa.\n\nI pionieri richiedono abiti, quindi dovrai realizzare\
        \ una linea di produzione di abiti con lana di agnello (uno dei beni prodotto\
        \ dalla fattoria).\n\nLa fattoria \xE8 un edifico molto speciale dato che\
        \ pu\xF2 produrre non solo uno, ma ma molti (e differenti) beni a tua scelta.\n\
        \nLa produzione della fattoria dipende dal tipo di campi che vi costruisci\
        \ attorno."]
    type: logbook_w
  - arguments: ['', !!python/unicode 'We will have a closer look at this later.


        Farms, like all companies producing raw materials, do not necessarily need
        to be connected to storage or a Branch Office.


        As long as units of the final production company can reach the farm, and collectors
        from the branch office or storage tent can reach the final company everything''s
        fine.


        If you, however, plan to do some processing on different parts of the island
        (which can make sense) or even on different islands, you will need a connection
        to collectors.


        Try to build the farm not too close to the coast or your existing buildings
        since it will need some space around it to work well.


        TASK: Build a farm.']
    type: logbook
  - arguments: [!!python/unicode 'Costruisci una fattoria mantenendo dello spazio
        disponibile intorno.']
    type: message
  - arguments: [tutStepDone, 46]
    type: set_var
  conditions:
  - arguments: [0]
    type: settler_level_greater
  - arguments: [tutStepDone, 42]
    type: var_gt
  - arguments: [tutStepDone, 46]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: I CAMPI', "La fattoria stessa non produrr\xE0\
        \ nulla senza alcuni campi.\n\nAl momento puoi scegliere tra pascoli, patate\
        \ e campi di zucchero.\n\nDiamo una breve descrizione:\n* Pascoli: le pecore\
        \ vivono qui, producendo lana d'agnello.\n* Campi di patate: vi crescono patate\
        \  che sono al momento considerate cibo.\n* Campi da zucchero: vi cresce zucchero\
        \ che \xE8 usato per distillare liquori e (successivamente) produrre dolciumi.\n\
        \nAl momento ci servono solo i pascoli, ma nel caso la tua catena alimentare\
        \ sia troppo piccola (forse in presenza di molti edifici residenziali) puoi\
        \ anche produrvi patate.\n\nNota che per le patate ti servir\xE0 una connessione\
        \ alla fattoria (non al campo!) dato che sar\xE0 l'unica compagnia che lavora\
        \ sui beni."]
    type: logbook_w
  - arguments: ['', "Assicurati che tutti i campi costruiti siano nell'area coperta\
        \ dalla fattoria.\n\nPuoi avere delle produzioni combinate - un pascolo non\
        \ sfrutter\xE0 tutta la fattoria - ma dovrai controllare quanti campi pu\xF2\
        \ servire una fattoria.\n\nDiverse classi di campi richiedono alle unit\xE0\
        \ della fattoria di impiegare pi\xF9 o meno tempo qui (per seminare, raccogliere,\
        \ radunare, ecc...) e, quindi, la fattoria potrebbe non riuscire a servire\
        \ tutti i campi gestiti in tempo.\n\nPer adesso non preoccuparti troppo di\
        \ questi problemi dato che non hai ancora costruito campi. Procediamo quindi!\n\
        \nOBIETTIVO: Costruisci almeno un pascolo nel raggio della fattoria ed aggiungi\
        \ campi di patate se lo desideri."]
    type: logbook
  - arguments: [!!python/unicode 'Costruisci almeno un pascolo ed aggiungi campi di
        patate se lo desideri.']
    type: message
  - arguments: [tutStepDone, 49]
    type: set_var
  conditions:
  - arguments: [20, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 45]
    type: var_gt
  - arguments: [tutStepDone, 49]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: I MAGAZZINI', !!python/unicode 'Did you
        watch your lumberjack recently?


        Since your branch office does not have unlimited space to store goods, collectors
        will stop fetching goods from companies when stock is full.

        So if no sailor recently wanted to upgrade his tent, you probably have a lot
        of boards and in that case, the lumberjack may idle.

        We can improve this situation with two different approaches, and below we
        will have a look at both of them.


        All companies offer the possibility of doing no work at all.

        This may sound strange, but try to click on the gear wheel you see in, for
        example, a lumberjack''s overview.


        If this ''break'' mode is enabled (we call it ''Decommissioning''), the running
        costs you pay for the building will decrease. They won''t be zero, but still
        lower than if you keep the company producing.']
    type: logbook_w
  - arguments: ['', !!python/unicode "This means that you can save money when you\
        \ temporarily do not need a company and do not want to tear it down, either.\n\
        \nAnother solution is to build the last increment-I building which has not\
        \ been mentioned so far: the storage tent.\n\nThis building has two purposes.\
        \ It:\n* Offers more storage for your goods, and \n* sends its own collectors\
        \ to fetch goods, just like the branch office does.\n\nNote that companies\
        \ can also be connected to a storage in order to get their products collected,\
        \ and if the branch office is overwhelmed with collector tasks, you can place\
        \ a storage tent to help out there.\n\nTASK: Build a storage tent, preferably\
        \ where you need collectors."]
    type: logbook
  - arguments: ["Costruisci una tenda magazzino (scheda livello I) dove pu\xF2 essere\
        \ utile."]
    type: message
  - arguments: [tutStepDone, 52]
    type: set_var
  conditions:
  - arguments: [18, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 48]
    type: var_gt
  - arguments: [tutStepDone, 52]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'OBIETTIVO: IL TESSITORE', !!python/unicode 'Now
        the wool production is set up, you still need a weaver to produce cloth out
        of this wool.


        There are two spots where you can build it - either close to the farm or close
        to a Storage Tent (or the Branch Office).


        In both cases you should ensure the connection to a trail as well.


        You can place the weaver close to the farm and tear down any trail to the
        farm to see that it will still fetch the wool and produce.


        TASK: Build a weaver positioned so it can get wool.']
    type: logbook
  - arguments: [!!python/unicode 'Costruisci un tessitore che possa raggiungere la
        lana della fattoria.']
    type: message
  - arguments: [tutStepDone, 55]
    type: set_var
  conditions:
  - arguments: [2, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 51]
    type: var_gt
  - arguments: [tutStepDone, 55]
    type: var_lt
- actions:
  - arguments: ["Alloggia almeno 50 abitanti nella tua citt\xE0 per completare il\
        \ tutorial. Hai bisogno di un bilancio positivo."]
    type: message
  - arguments: [!!python/unicode 'OBIETTIVO: FINISCI IL TUTORIAL', "Prova ad alloggiare\
        \ 50 abitanti o pi\xF9 nella tua citt\xE0 fornendo pi\xF9 edifici residenziali.\n\
        \nUna volta che sarai in grado di mantenere un'economia che pu\xF2 soddisfare\
        \ questo valore di cittadini, sarai pronto per scoprire Unknown Horizons!\n\
        \nOBIETTIVO: Raggiungi un totale di 50 abitanti ed un bilancio positivo per\
        \ completare questo tutorial."]
    type: logbook
  - arguments: [tutStepDone, 58]
    type: set_var
  conditions:
  - arguments: [3, 0]
    type: settlement_res_stored_greater
  - arguments: [7, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 54]
    type: var_gt
  - arguments: [tutStepDone, 58]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'COMPITI FINITI', "Non c'\xE8 pi\xF9 nulla da fare,\
        \ ora.\n\nSe hai suggerimenti su cosa potremmo o dovremmo migliorare, aggiungili\
        \ oppure esci:\n\nwww.unknown-horizons.org\n\n#unknown-horizons @ irc.freenode.net\n\
        \nteam@unknown-horizons.org\n\nI nostri forum sono anche aperti per te!\n\n\
        I migliori risultati fino ad ora sono stati raggiunti unendosi al canale IRC,\
        \ quindi potresti provare questo come primo passo (-;"]
    type: logbook
  - arguments: [!!python/unicode 'Grazie!', !!python/unicode '







        Grazie per aver giocato il tutorial!


        La squadra di UH']
    type: logbook
  - arguments: [tutStepDone, 61]
    type: set_var
  conditions:
  - arguments: [0]
    type: settlements_num_greater
  - arguments: [50]
    type: settlement_inhabitants_greater
  - arguments: [3, 3]
    type: building_num_of_type_greater
  - arguments: [0]
    type: settler_level_greater
  - arguments: [0]
    type: player_balance_greater
  - arguments: [tutStepDone, 57]
    type: var_gt
  - arguments: [tutStepDone, 61]
    type: var_lt
- actions:
  - {type: win}
  - arguments: [!!python/unicode 'Congratulazioni! Hai completato il tutorial e sei
        pronto per nuove sfide!']
    type: message
  conditions:
  - arguments: [tutStepDone, 60]
    type: var_gt
locale: it
mapfile: development.sqlite

