
# DON'T EDIT THIS FILE.

# It was automatically generated with development/create_scenario_pot.sh using
# translation files from pootle.

author: !!python/unicode 'Echipa UH'
description: "Practica:\nStabile\u0219te o colonie \u0219i \xEEnva\u021B\u0103 cum\
  \ s\u0103 joci!\n"
difficulty: "Practic\u0103"
events:
- actions:
  - arguments: ["Construie\u0219te o sucursal\u0103 pe coast\u0103. A\u0219a va fi\
        \ accesibil\u0103 c\u0103tre alte nave ca negustorul independent."]
    type: message
  - arguments: ["Bine a\u021Bi venit la Unknown Horizons!", "Acesta este jurnalul\
        \ de bord unde toate informa\u021Biile importante sunt \xEEnregistrate. O\
        \ notificare redus\u0103 a fiec\u0103rei activit\u0103\u021Bi va ap\u0103\
        rea \xEEn st\xE2nga ecranului.\n\nDac\u0103 sunte\u021Bi interesat \xEEn descrieri\
        \ detaliate, jurnalul ar trebui s\u0103 ofere ajutorul necesar.\n\nDup\u0103\
        \ ce \xEEnchide\u021Bi acest jurnal, poate fi redeschis prin icoana \u201E\
        jurnal de bord\u201D din col\u021Bul din dreapta-sus (sub mini-hart\u0103\
        , cu un document \xEEnchis \u0219i o pan\u0103).\n\nPentru orice sugestie\
        \ de redactare, probleme de \xEEn\u021Belegere sau erori nu ezita\u021Bi s\u0103\
        \ ne contacta\u021Bi.\n\nVizita\u021Bi www.unknown-horizons.org pentru detalii.\n\
        \n\u0218i acum, s\u0103 \xEEncepem s\u0103 ne juc\u0103m."]
    type: logbook_w
  - arguments: ["SARCIN\u0102: COLONIZEAZ\u0102 O INSUL\u0102", "Pentru a muta nava,\
        \ selec\u021Biona\u021Bi-o cu clic st\xE2nga \u0219i clic dreapta la destina\u021B\
        ia unde o dori\u021Bi.\n\nC\xE2nd sunte\u021Bi \xEEn apropierea coastei, butonul\
        \ \xEEn form\u0103 de ancor\u0103 din panou va deveni activ.\n\nAcesta indic\u0103\
        \ posibilitate construirii unei sucursale prin ap\u0103sarea butonului \u201E\
        creare colonie\u201D.\n\nAcum o vizionare a cl\u0103dirii este mobil\u0103\
        \ cu cursorul.\n\nPute\u021Bi construi unde aceast\u0103 vizionare nu are\
        \ nuan\u021B\u0103 ro\u0219iatic\u0103.\nClic unde dori\u021Bi s\u0103 plasa\u021B\
        i cl\u0103direa.\n\nSARCIN\u0102: construi\u021Bi o sucursal\u0103 pe coast\u0103\
        .", 2]
    type: logbook
  - arguments: [tutStepDone, 16]
    type: set_var
  conditions:
  - arguments: [0]
    type: time_passed
- actions:
  - arguments: [!!python/unicode 'NEW TASK: BUILD A LUMBERJACK', !!python/unicode 'The
        construction material on your ship got unloaded automatically. You can now
        construct some basic buildings.


        We will start with building a lumberjack.


        This is essential because, at this stage, boards are the only poles your sailors
        can afford to hang their tents over.


        The fisherman needs some boards to build his vessel as well.


        In order to construct lumberjacks; open the build menu by either clicking
        the big icon below the mini map or pressing B key.


        The build menu is sorted by increments.

        You are currently in the first increment (the Sailors level) so are offered
        only the basic buildings.']
    type: logbook_w
  - arguments: ['', !!python/unicode 'As your civilization advances, you also gain
        more and more complex buildings.


        For now, select the lumberjack under ''Companies'' and build it in an area
        with some trees around.


        You can also plant trees later - but that costs money. Use what nature provided
        you with!


        A company always needs a trail connection to a storage or warehouse, otherwise
        goods will remain at the company and not be collected.


        This means that you have to build a trail connecting your warehouse (or storage)
        and lumberjack.


        TASK: Build a lumberjack in a wooded area and connect it to a road.


        Watch how a collector will fetch your first self-produced boards.']
    type: logbook
  - arguments: [!!python/unicode 'Build a lumberjack and connect it to the warehouse
        using a trail.']
    type: message
  - arguments: [tutStepDone, 19]
    type: set_var
  conditions:
  - arguments: [4, 9]
    type: settlement_res_stored_greater
  - arguments: [5, 9]
    type: settlement_res_stored_greater
  - arguments: [6, 9]
    type: settlement_res_stored_greater
  - arguments: [tutStepDone, 15]
    type: var_gt
  - arguments: [tutStepDone, 19]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: FOOD SUPPLY', !!python/unicode 'You will
        need to have some food-producing companies, too, because people in general
        (and especially sailors) are very hungry.


        Available companies in the first increment are the Hunter and Fisher.


        The Hunter, surprisingly, hunts animals in the forest, so he needs trees around.


        Note that you can place your Hunter close to the lumberjack''s forest.


        It can happen that the animals don''t reproduce fast enough or simply hide
        well.


        Conclusion: the hunter is not too reliable if you need continuous supply.']
    type: logbook_w
  - arguments: ['', !!python/unicode 'The Fisher needs a coastal building site like
        the warehouse and a fish school in range.


        He will build a small rowing vessel and catch some fish.


        This is a very constant supply at the cost of a slightly longer production
        time per unit of food.


        A small settlement like yours can use both companies, and you can better balance
        pros and cons if you see the direct comparison.


        TASK: Build a hunter and a fisher.


        Don''t forget to connect them to your warehouse with trails!']
    type: logbook
  - arguments: [!!python/unicode 'Build a hunter and a fisher. Connect them to the
        warehouse.']
    type: message
  - arguments: [tutStepDone, 22]
    type: set_var
  conditions:
  - arguments: [8, 0]
    type: buildings_connected_to_warehouse_gt
  - arguments: [tutStepDone, 18]
    type: var_gt
  - arguments: [tutStepDone, 22]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: MAIN SQUARE', !!python/unicode 'Your residents
        need a main square where they can fetch their goods from.


        This means that they need a trail connection from their home to the main square.


        All goods in your warehouse are available at this ''market place'', so your
        residents do not need to walk to the fisher or even to the warehouse.


        You should consider founding your actual house settlement in an area where
        you can easily expand it and build some trails, too.


        You should avoid placing tents too close to your lumberjacks for example because
        building tents will clear away the trees that your lumberjack needs to produce
        boards.


        TASK: Build a main square.']
    type: logbook_w
  - arguments: ['', !!python/unicode 'Now let''s have a closer look at the main square.


        In the ''Account'' tab you get a balance sheet of this island, featuring all
        costs you pay and all taxes you earn.


        The items ''Sale'' and ''Buy'' refer to your trading balance and will be explained
        later on.


        If your balance is positive, you all-in-all make a profit.


        In the different increment overview tabs you can see statistics about your
        inhabitants. You also set the increment-specific global tax here and allow
        or deny inhabitants of this increment to upgrade to the next higher one.']
    type: logbook
  - arguments: [!!python/unicode 'Build a main square. Choose an area without many
        economy buildings.']
    type: message
  - arguments: [tutStepDone, 25]
    type: set_var
  conditions:
  - arguments: [9, 0]
    type: building_num_of_type_greater
  - arguments: [11, 0]
    type: building_num_of_type_greater
  - arguments: [9, 0]
    type: buildings_connected_to_warehouse_gt
  - arguments: [11, 0]
    type: buildings_connected_to_warehouse_gt
  - arguments: [tutStepDone, 21]
    type: var_gt
  - arguments: [tutStepDone, 25]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: RESIDENTIAL BUILDINGS', !!python/unicode 'Settlers
        want to have a roof over their heads, else they won''t even think of living
        in your city! You need to provide tents.


        Tents are the basic residential buildings. Your inhabitants will want to upgrade
        it when they reach higher increments.


        Settlers may not look very useful since they will try to consume all goods
        you produce - but they at least pay taxes, and that''s the only way you can
        make money for now!


        TASK: Build a tent and connect it to the main square.']
    type: logbook
  - arguments: [!!python/unicode 'Build a tent and connect it to the main square.']
    type: message
  - arguments: [tutStepDone, 28]
    type: set_var
  conditions:
  - arguments: [4, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 24]
    type: var_gt
  - arguments: [tutStepDone, 28]
    type: var_lt
- actions:
  - arguments: ['', !!python/unicode 'Let''s have a look at the tent overview tab.

        You can see

        * the happiness of these residents,

        * the taxes they pay and

        * the resources they demand.


        If their demands are fulfilled, happiness and thus your tax income increase.


        If not, happiness and income decrease. At some time your residents may get
        really sour and simply turn their back on your village, leaving behind a decaying
        ruin.


        Note that you can also change the global tax settings here, too.


        TASK: Build at least three additional tents.


        TIP: Holding down SHIFT eases constructing multiple buildings of the same
        kind.']
    type: logbook
  - arguments: [!!python/unicode 'Build at least three additional tents and connect
        them to the main square.']
    type: message
  - arguments: [tutStepDone, 31]
    type: set_var
  conditions:
  - arguments: [3, 4, 0]
    type: buildings_connected_to_building_gt
  - arguments: [tutStepDone, 27]
    type: var_gt
  - arguments: [tutStepDone, 31]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: BUILD SIGNAL FIRE', !!python/unicode 'Can
        you see the ship passing your island from time to time? That ship belongs
        to the Free Trader, one of the first settlers in this archipelago.


        The trader will supply your settlement with necessary goods which you can''t
        produce yet.

        You can also sell surpluses of your production, but in general consuming them
        (by building more tents) instead of selling them yields more profit.


        Normally the trader ships just sail around and look for deals, but you can
        speed things up a bit.


        For this purpose, build a signal fire at the coast near your warehouse. It
        will show ships the way to your settlement.


        The signal fire has to cover the area which the ships pass through to catch
        them.']
    type: logbook_w
  - arguments: ['', !!python/unicode 'After this little advertisment, the trader will
        also stop by and look into your warehouse if it planned to sail past it.


        You can propose deals via the warehouse tab ''Buy/Sell''. (This feature is
        currently quite fiddly to use. If you come up with a nice way of improving
        it, please share your thoughts! We need your help here!)


        At the ''sailors'' increment, you are equipped with three trading slots.


        Click on the small icon to change the slot mode from ''Buy'' to ''Sell'' and
        vice versa.


        Click in the slot to choose the good you want to trade with. We will further
        explain this once you are ready to trade.


        TASK: Build a signal fire at the coast close to your warehouse.']
    type: logbook
  - arguments: [!!python/unicode 'Build a signal fire at the coast close to your warehouse.']
    type: message
  - arguments: [tutStepDone, 34]
    type: set_var
  conditions:
  - arguments: [3, 4, 3]
    type: buildings_connected_to_building_gt
  - arguments: [tutStepDone, 30]
    type: var_gt
  - arguments: [tutStepDone, 34]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: LEARN TO TRADE', !!python/unicode "Excellent!\
        \ The Free Trader will now stop by at your warehouse from time to time.\n\n\
        Let's continue our tutorial on how to trade.\n\nAfter selecting a particular\
        \ type of good, the green bar across the bottom of the slot (if visible) shows\
        \ you how much you have in stock of this good.\n\nDragging the slider on the\
        \ right of each slot determines your 'target value' which has a different\
        \ meaning on 'Buy' and 'Sell'. \nWhen buying, you will buy sufficient to hold\
        \ your 'target value' in stock. \nWhen selling the 'target value' is the number\
        \ which you hold in reserve to not sell"]
    type: logbook_w
  - arguments: ['', !!python/unicode "For example: \nHaving a 'Buy' slot and 5 tons\
        \ in stock, a slider positioned at 9 tons will cause you to buy 4 additional\
        \ tons at most.\nSelling works similarly. A 'Sell' slot with 18 tons in stock\
        \ and the slider positioned at 13 will sell up to 5 tons.\n\nIf the free trader\
        \ however only wants to buy or sell less than your settings would allow him,\
        \ you need to live with that and wait for him to return.\n\nUnknown Horizons\
        \ features smart pricing, so the value of one unit can vary.\nIt is NOT possible\
        \ to change prices manually!\n\nYou can see your trade balance in the 'Account'\
        \ tab comparing the 'Sale' and 'Buy' values there.\n\nTASK: Buy as many tools\
        \ as you need to have 30 tools in stock!"]
    type: logbook
  - arguments: [!!python/unicode 'Reach an island stock of at least 30 tools.', !!python/unicode 'Note
        that this might take a while.']
    type: message
  - arguments: [tutStepDone, 37]
    type: set_var
  conditions:
  - arguments: [6, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 33]
    type: var_gt
  - arguments: [tutStepDone, 37]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: BUILD A PAVILION', !!python/unicode 'Those
        tools will be enough for the moment. Well done!


        You now provide housing, a main square and food to your inhabitants.


        Still there is one demand which we have not satisfied so far, you may check
        that in the marketplace or tent tab - your sailors want a basic building where
        they can pray.


        The solution is a pavilion which the village parson quickly puts up as shelter
        from the sun.


        Service buildings like this also need to be connected to the tents with a
        trail, else your inhabitants feel unable to reach them.


        In later increments, upgraded versions of buildings may become available.']
    type: logbook_w
  - arguments: ['', !!python/unicode 'Note that faith is treated like a physical resource!


        This means that your inhabitants need a road connection to the producer (pavilion)
        to pick up faith there.

        After some time, they will have consumed it and then again look for a producer
        to collect more faith.


        Important:

        It is NOT enough that the building is merely within a certain range of the
        tents.

        The road connection is required as well.


        TASK: Build a pavilion with a trail to the tents in order to fulfill your
        sailors'' demand for faith.']
    type: logbook
  - arguments: [!!python/unicode 'Build a pavilion with connection to the tents.']
    type: message
  - arguments: [tutStepDone, 40]
    type: set_var
  conditions:
  - arguments: [6, 29]
    type: settlement_res_stored_greater
  - arguments: [tutStepDone, 36]
    type: var_gt
  - arguments: [tutStepDone, 40]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: NEXT INCREMENT', !!python/unicode 'All
        demands are fulfilled now if your inhabitants can regularly visit the main
        square & pavilion and your food supply is adequate.


        If the sailors are happy enough, they want to advance to the next increment
        called Pioneers.


        To make them happy, there is nothing else for you to do but setting taxes
        to a lower level since you have fulfilled all the demands of your inhabitants.


        You should try to not always run on low taxes since this will probably lead
        to bankruptcy sooner or later. For a period of time and if you know what you
        are doing, it is fine though.


        After some time, the first unit should walk to the main square and have a
        look for new construction material there to build a log house. This house
        will replace the old tent.']
    type: logbook_w
  - arguments: ['', !!python/unicode 'Such residential upgrades are the only ones
        which cost resources and can not be restricted by you.


        There are manual upgrades to some buildings where you use resources to construct
        a better version on the same spot, and there are upgrades without costs for
        example as you will see with the lumberjack (In this case, only the graphics
        change).


        Upgraded housing accomodates more inhabitants, and pioneers pay more taxes
        than sailors, too.


        As you may have figured out already, the downside is that pioneers demand
        additional goods which sailors do not need - so you will need to spend this
        extra money to make them happy as well.


        TASK: Set the tax level to Low (left end) and wait for sailors to upgrade.']
    type: logbook
  - arguments: [!!python/unicode 'Set the tax level to Low (left end) and wait for
        your sailors to upgrade.']
    type: message
  - arguments: [tutStepDone, 43]
    type: set_var
  conditions:
  - arguments: [3, 5, 3]
    type: buildings_connected_to_building_gt
  - arguments: [tutStepDone, 39]
    type: var_gt
  - arguments: [tutStepDone, 43]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: BUILD A FARM', !!python/unicode 'Congratulations!
        Some of your inhabitants have reached increment II!


        Now you have access to new buildings, take a look at the Build menu again.


        A shiny new tab appeared there.


        Pioneers will demand cloth, so you need to set up a production line for cloth
        starting with lambs wool (which is one of the goods produced at the farm).


        The farm is a very special production building since it can produce not only
        one, but very many (and different) goods if you choose.


        The output of farms depends on what kind of fields you build around it.']
    type: logbook_w
  - arguments: ['', !!python/unicode 'We will have a closer look at this later.


        Farms, like all companies producing raw materials, do not necessarily need
        to be connected to storage or a warehouse.


        As long as units of the final production company can reach the farm, and collectors
        from the warehouse or storage tent can reach the final company everything''s
        fine.


        If you, however, plan to do some processing on different parts of the island
        (which can make sense) or even on different islands, you will need a connection
        to collectors.


        Try to build the farm not too close to the coast or your existing buildings
        since it will need some space around it to work well.


        TASK: Build a farm.']
    type: logbook
  - arguments: [!!python/unicode 'Build a farm and keep some empty space around it.']
    type: message
  - arguments: [tutStepDone, 46]
    type: set_var
  conditions:
  - arguments: [0]
    type: settler_level_greater
  - arguments: [tutStepDone, 42]
    type: var_gt
  - arguments: [tutStepDone, 46]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: BUILD FIELDS', !!python/unicode 'The farm
        itself is not going to produce anything without some fields.


        You currently have the choice between pastures, potato and sugar fields.


        Let''s have a short overview:

        * Pasture: Sheep live here, producing lamb wool.

        * Potato field: Grows potatoes which are currently treated as food.

        * Sugar field: Grows sugar which is used to distill liquor and (later) produce
        confectionery.


        We now only need pastures, but in case your food supply chain is too small
        (maybe many residential buildings) you can also produce some potatoes.


        Note that for potatoes you will need a road connection to the farm (not to
        the field!) as it will be the only company to work on the goods.']
    type: logbook_w
  - arguments: ['', "Make sure that all fields you build are in the area covered by\
        \ the farm.\n\nYou can have combined production - one pasture will not lead\
        \ to 100 percent efficiency of the farm - but you need to check how many fields\
        \ one farm can serve.\n\nDifferent classes of fields require the farm units\
        \ to spend more or less time there (to seed, harvest, herd, etc\u2026) and\
        \ because of that, the farm may be unable to serve all of the fields you built\
        \ for it in time.\n\nFor now, you do not need to care about these issues a\
        \ lot since you haven't built any fields. Let's change that!\n\nTASK: Build\
        \ at least one pasture in the farm's range and add potato fields if you like."]
    type: logbook
  - arguments: [!!python/unicode 'Build at least one pasture and add potato fields
        if you like.']
    type: message
  - arguments: [tutStepDone, 49]
    type: set_var
  conditions:
  - arguments: [20, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 45]
    type: var_gt
  - arguments: [tutStepDone, 49]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: BUILD STORAGE', !!python/unicode 'Did
        you watch your lumberjack recently?


        Since your warehouse does not have unlimited space to store goods, collectors
        will stop fetching goods from companies when stock is full.

        So if no sailor recently wanted to upgrade his tent, you probably have a lot
        of boards and in that case, the lumberjack may idle.

        We can improve this situation with two different approaches, and below we
        will have a look at both of them.


        All companies offer the possibility of doing no work at all.

        This may sound strange, but try to click on the gear wheel you see in, for
        example, a lumberjack''s overview.


        If this ''break'' mode is enabled (we call it ''Decommissioning''), the running
        costs you pay for the building will decrease. They won''t be zero, but still
        lower than if you keep the company producing.']
    type: logbook_w
  - arguments: ['', !!python/unicode "This means that you can save money when you\
        \ temporarily do not need a company and do not want to tear it down, either.\n\
        \nAnother solution is to build the last increment-I building which has not\
        \ been mentioned so far: the storage tent.\n\nThis building has two purposes.\
        \ It:\n* Offers more storage for your goods, and \n* sends its own collectors\
        \ to fetch goods, just like the warehouse does.\n\nNote that companies can\
        \ also be connected to a storage in order to get their products collected,\
        \ and if the warehouse is overwhelmed with collector tasks, you can place\
        \ a storage tent to help out there.\n\nTASK: Build a storage tent, preferably\
        \ where you need collectors."]
    type: logbook
  - arguments: [!!python/unicode 'Build a storage tent (increment I tab) where it
        makes sense.']
    type: message
  - arguments: [tutStepDone, 52]
    type: set_var
  conditions:
  - arguments: [18, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 48]
    type: var_gt
  - arguments: [tutStepDone, 52]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NEW TASK: BUILD A WEAVER', !!python/unicode 'Now
        the wool production is set up, you still need a weaver to produce cloth out
        of this wool.


        There are two spots where you can build it - either close to the farm or close
        to a Storage Tent (or the warehouse).


        In both cases you should ensure the connection to a trail as well.


        You can place the weaver close to the farm and tear down any trail to the
        farm to see that it will still fetch the wool and produce.


        TASK: Build a weaver positioned so it can get wool.']
    type: logbook
  - arguments: [!!python/unicode 'Build a weaver that can somehow reach the wool of
        your farm.']
    type: message
  - arguments: [tutStepDone, 55]
    type: set_var
  conditions:
  - arguments: [2, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 51]
    type: var_gt
  - arguments: [tutStepDone, 55]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'House a total of 50 or more inhabitants in your
        city to complete the tutorial. You need a positive balance.']
    type: message
  - arguments: [!!python/unicode 'NEW TASK: COMPLETE TUTORIAL', !!python/unicode 'Try
        to house a total of 50 or more inhabitants in your city by providing more
        residential buildings.


        Once you are able to keep an economy running which can satisfy this amount
        of consumers, you are ready to discover new Unknown Horizons!


        TASK: Reach a total number of 50 inhabitants and a positive balance to complete
        this tutorial.']
    type: logbook
  - arguments: [tutStepDone, 58]
    type: set_var
  conditions:
  - arguments: [3, 0]
    type: settlement_res_stored_greater
  - arguments: [7, 0]
    type: building_num_of_type_greater
  - arguments: [tutStepDone, 54]
    type: var_gt
  - arguments: [tutStepDone, 58]
    type: var_lt
- actions:
  - arguments: [!!python/unicode 'NO TASKS LEFT', !!python/unicode 'There is nothing
        left to do now.


        If you have any suggestions on what we could or should improve, add or leave
        out:


        www.unknown-horizons.org


        #unknown-horizons @ irc.freenode.net


        team@unknown-horizons.org


        Our forums are open to you as well!


        The best results until now were achieved by joining our IRC channel, so you
        could try that out first (-;']
    type: logbook
  - arguments: [!!python/unicode 'Thanks!', !!python/unicode '







        Thanks for playing the tutorial!


        Your UH-Team']
    type: logbook
  - arguments: [tutStepDone, 61]
    type: set_var
  conditions:
  - arguments: [0]
    type: settlements_num_greater
  - arguments: [50]
    type: settlement_inhabitants_greater
  - arguments: [3, 3]
    type: building_num_of_type_greater
  - arguments: [0]
    type: settler_level_greater
  - arguments: [0]
    type: player_balance_greater
  - arguments: [tutStepDone, 57]
    type: var_gt
  - arguments: [tutStepDone, 61]
    type: var_lt
- actions:
  - {type: win}
  - arguments: [!!python/unicode 'Congratulations! You have reached the end of this
        tutorial and are ready to meet new challenges!']
    type: message
  conditions:
  - arguments: [tutStepDone, 60]
    type: var_gt
locale: ro
mapfile: development.sqlite

